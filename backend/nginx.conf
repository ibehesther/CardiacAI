# /etc/nginx/sites-available/fastapi_proxy

server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;
	listen 443 ssl; # managed by Certbot
    	listen [::]:443 ssl ipv6only=on; # managed by Certbot
    	ssl_certificate /etc/letsencrypt/live/api.cardiacai.tech/fullchain.pem; # managed by Certbot
    	ssl_certificate_key /etc/letsencrypt/live/api.cardiacai.tech/privkey.pem; # managed by Certbot
    	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    	server_name api.cardiacai.tech; # managed by Certbot

    	location / {
        	proxy_pass http://127.0.0.1:8000; # Forward requests to your FastAPI server

        	# Standard headers for HTTP proxying
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;

        	# WebSocket specific headers
        	proxy_http_version 1.1; # Crucial for WebSocket upgrade
        	proxy_set_header Upgrade $http_upgrade; # Passes the Upgrade header from the client
        	proxy_set_header Connection "upgrade"; # Specifies the connection upgrade

        	# Optional: Adjust read timeout for long-lived WebSocket connections
	        proxy_read_timeout 86400s; # Example: 24 hours, adjust as needed
	

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

	}
}
server {
    if ($host = api.cardiacai.tech) {
        return 301 https://$host$request_uri;
   } # managed by Certbot


        listen 80 ;
        listen [::]:80 ;
    server_name api.cardiacai.tech;
    return 404; # managed by Certbot
}

